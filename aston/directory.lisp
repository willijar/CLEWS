(in-package :aston)
(defclass aston-directory (clews:application)
  ()
  (:documentation "Aston top level directory application"))

(defmethod clews:response-handler((app aston-directory) request rest)
  (values
  `(html (head (title "Educational Web Application Server"))
	 (body
	  ((section :title "Educational Web Application Server")
	   (p "This top level page is a marker only used for testing purposes")
	   (ul
	    (li ((a :href "../index/") "This Index Page"))
	    (li ((a :href "../forms/") "Forms"))
	    (li ((a :href "../peer-review/") "Peer Review"))
	    (li ((a :href "../adaptive-tutorial/") "Adaptive Tutorial"))
	    (li ((a :href "../discussions/") "Discussion Groups"))
	    (li ((a :href "../projects/") "MSc Projects"))
	    (li ((a :href "../cv/") "CVs"))
	    (li ((a :href "../pwd/") "Passwords"))
	    (li ((a :href "../publications/") "Publications"))
	    (li ((a :href "../module-reports/") "Module Reports"))
	    (li ((a :href "../MSc/") "MSc Grades"))
      (li ((a :href "../media/submit") "Latex Rendering"))
	    (li ((a :href "../assessments/") "Assessments"))))
	  ((section :title "Request Headers")
	   (dl
	    ,@(mapcan #'(lambda(item)
			  `((dt (b ,(string (inet.header:name item))))
			    (dd ,(inet.body:body item))
			    (dd ,(format nil "~S" (inet.body:content item)))))
		      (inet.header:header request))
	    (dt (b "REQUEST-PEER"))
	    (dd ,(inet.http:remote-addr request))
	    (dt (b "REQUEST-URL"))
	    (dd ,(format nil "~A" (url request)))
	    (dt (b "REST"))
	    (dd ,rest)) )))))

(defmethod render-page ((app aston-directory) stream
				       markup)
       (html stream (apply-aston-style markup)))